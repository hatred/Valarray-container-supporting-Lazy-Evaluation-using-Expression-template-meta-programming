Implementation of a Valarray container in C++ which supports Lazy evaluation of expressions (using expression templates). You should optimize the execution of statements like z = ( x * y ) + w; Where x,y,z,w are Valarrays, so that only one loop gets executed and no temporary arrays are allocated. To clarify, when the compiler makes the call to x.operator*(y), x and y should not immediately multiplied together. You should build up a representation of the expression, and only evaluate it when necessary (i.e., when the assignment operator, or the equivalent is called. More instructions in Instructions.pdf. Was implemented as part of a project for the EPL course.
